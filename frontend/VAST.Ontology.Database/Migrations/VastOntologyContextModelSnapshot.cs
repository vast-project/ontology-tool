// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using VAST.Ontology.Database;

#nullable disable

namespace VAST.Ontology.Database.Migrations
{
    [DbContext(typeof(VastOntologyContext))]
    partial class VastOntologyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AnnotationItem", b =>
                {
                    b.Property<int>("AnnotationItemId")
                        .HasColumnType("integer");

                    b.Property<int>("AnnotationsId")
                        .HasColumnType("integer");

                    b.HasKey("AnnotationItemId", "AnnotationsId");

                    b.HasIndex("AnnotationsId");

                    b.ToTable("AnnotationItem");
                });

            modelBuilder.Entity("VAST.Ontology.Database.Models.Annotation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CollectionId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("DocumentId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsImported")
                        .HasColumnType("boolean");

                    b.Property<string>("OriginalId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DocumentId");

                    b.ToTable("Annotations");
                });

            modelBuilder.Entity("VAST.Ontology.Database.Models.Collection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("OriginalId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Collections");
                });

            modelBuilder.Entity("VAST.Ontology.Database.Models.Document", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CollectionId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("OriginalId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CollectionId");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("VAST.Ontology.Database.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsImported")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInSchema")
                        .HasColumnType("boolean");

                    b.Property<int>("ItemType")
                        .HasColumnType("integer");

                    b.Property<DateTime>("LastSyncTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("VAST.Ontology.Database.Models.ItemLink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AuthorId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AuthorName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("RelationshipTypeId")
                        .HasColumnType("integer");

                    b.Property<int>("SourceId")
                        .HasColumnType("integer");

                    b.Property<int>("TargetId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RelationshipTypeId");

                    b.HasIndex("SourceId");

                    b.HasIndex("TargetId");

                    b.ToTable("ItemLinks");
                });

            modelBuilder.Entity("VAST.Ontology.Database.Models.RelationshipType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsImported")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OntologyId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("RelationshipTypes");
                });

            modelBuilder.Entity("VAST.Ontology.Database.Models.Vote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AuthorId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AuthorName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("DuplicateLink")
                        .HasColumnType("boolean");

                    b.Property<int>("ItemLinkId")
                        .HasColumnType("integer");

                    b.Property<bool>("Negative")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("ItemLinkId");

                    b.ToTable("Votes");
                });

            modelBuilder.Entity("AnnotationItem", b =>
                {
                    b.HasOne("VAST.Ontology.Database.Models.Item", null)
                        .WithMany()
                        .HasForeignKey("AnnotationItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VAST.Ontology.Database.Models.Annotation", null)
                        .WithMany()
                        .HasForeignKey("AnnotationsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VAST.Ontology.Database.Models.Annotation", b =>
                {
                    b.HasOne("VAST.Ontology.Database.Models.Document", "Document")
                        .WithMany("Annotations")
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Document");
                });

            modelBuilder.Entity("VAST.Ontology.Database.Models.Document", b =>
                {
                    b.HasOne("VAST.Ontology.Database.Models.Collection", "Collection")
                        .WithMany("Documents")
                        .HasForeignKey("CollectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Collection");
                });

            modelBuilder.Entity("VAST.Ontology.Database.Models.ItemLink", b =>
                {
                    b.HasOne("VAST.Ontology.Database.Models.RelationshipType", "RelationshipType")
                        .WithMany()
                        .HasForeignKey("RelationshipTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VAST.Ontology.Database.Models.Item", "Source")
                        .WithMany("SourceLinks")
                        .HasForeignKey("SourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VAST.Ontology.Database.Models.Item", "Target")
                        .WithMany("TargetLinks")
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RelationshipType");

                    b.Navigation("Source");

                    b.Navigation("Target");
                });

            modelBuilder.Entity("VAST.Ontology.Database.Models.Vote", b =>
                {
                    b.HasOne("VAST.Ontology.Database.Models.ItemLink", "ItemLink")
                        .WithMany("Votes")
                        .HasForeignKey("ItemLinkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ItemLink");
                });

            modelBuilder.Entity("VAST.Ontology.Database.Models.Collection", b =>
                {
                    b.Navigation("Documents");
                });

            modelBuilder.Entity("VAST.Ontology.Database.Models.Document", b =>
                {
                    b.Navigation("Annotations");
                });

            modelBuilder.Entity("VAST.Ontology.Database.Models.Item", b =>
                {
                    b.Navigation("SourceLinks");

                    b.Navigation("TargetLinks");
                });

            modelBuilder.Entity("VAST.Ontology.Database.Models.ItemLink", b =>
                {
                    b.Navigation("Votes");
                });
#pragma warning restore 612, 618
        }
    }
}
